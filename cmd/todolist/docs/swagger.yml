swagger: '2.0'
info:
  description: |
    The **Gopher Todo List** API is a REST API that allows for the management of day-to-day tasks.
    With this API, you can create, edit, delete, and list tasks. Additionally, you have the
    ability to list tasks by status and by list categories.

    This API has been developed using the **Go** programming language, utilizing the Chi framework
    for routing and the Swaggo framework for documentation. The **PostgreSQL** database has been
    employed for data storage.
    
    The purpose of this project is to provide an API that can facilitate the development of a
    frontend application for task management. **If you're interested in contributing** to the
    project, please feel free to do so. The source code is available on GitHub at the following
    link: [github.com/willianbl99/gopher-todo_list](https://github.com/willianbl99/gopher-todo_list).
  version: 1.0.0
  title: Gopher Todo List
  contact:
    email: paulowiliandev@gmail.com
host: gopher-todolist.onrender.com
tags:
- name: api
  description: Information about the API
- name: auth
  description: RegisterResponse and login
- name: tasks
  description: Access to tasks and lists
schemes:
- https
paths:
  /:
    get:
      tags:
      - api
      summary: Swagger UI
      description: Swagger UI
      operationId: swaggerUI
      produces:
      - text/html
      responses:
        '200':
          description: successful operation
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
  /health:
    get:
      tags:
      - api
      summary: Health check
      description: Health check
      operationId: healthCheck
      produces:
      - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
  /swagger:
    get:
      tags:
      - api
      summary: Swagger UI
      description: Swagger UI
      operationId: swaggerUI
      produces:
      - text/html
      responses:
        '200':
          description: successful operation
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
  /sing-up:
    post:
      tags:
      - auth
      summary: RegisterResponse
      description: RegisterResponse a new user
      operationId: register
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: User object that needs to be added to the store
        required: true
        schema:
          $ref: '#/definitions/RegisterResponse'
      responses:
        '200':
          description: successful operation
          schema:
            type: string
        '400':
          description: Bad Body Request
          schema:
            type: string
        '409':
          description: Email Already Exists
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
  /sing-in:
    post:
      tags:
      - auth
      summary: LoginBody
      description: LoginBody with email and password
      operationId: login
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: User object that needs to be added to the store
        required: true
        schema:
          $ref: '#/definitions/LoginBody'
      responses:
        '200':
          description: successful operation
          schema:
            type: string
        '401':
          description: Email Or Password Invalid
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
  /tasks:
    get:
      tags:
      - tasks
      summary: Get all tasks
      description: Get all tasks
      operationId: getTasks
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: Token
        required: true
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/TaskResponse'
        '401':
          description: Unauthorized
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
  /task:
    post:
      tags:
      - tasks
      summary: Create a task
      description: Create a task
      operationId: createTask
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: Token
        required: true
        type: string
      - in: body
        name: body
        description: TaskResponse object that needs to be added to the store
        required: true
        schema:
          $ref: '#/definitions/TaskResponse'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/TaskBody'
        '400':
          description: Bad Body Request
          schema:
            type: string
        '401':
          description: Unauthorized
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
  /task/{task_id}:
    get:
      tags:
      - tasks
      summary: Get a task
      description: Get a task
      operationId: getTask
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: Token
        required: true
        type: string
      - name: id
        in: query
        description: TaskResponse id
        required: true
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/TaskBody'
        '400':
          description: Bad Body Request
          schema:
            type: string
        '401':
          description: Unauthorized
          schema:
            type: string
        '404':
          description: TaskResponse Not Found
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
    put:
      tags:
      - tasks
      summary: Update a task
      description: Update a task
      operationId: updateTask
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: Token
        required: true
        type: string
      - name: id
        in: query
        description: TaskResponse id
        required: true
        type: string
      - in: body
        name: body
        description: TaskResponse object that needs to be added to the store
        required: true
        schema:
          $ref: '#/definitions/TaskBody'
      responses:
        '200':
          description: successful operation
        '400':
          description: Bad Body Request
          schema:
            type: string
        '401':
          description: Unauthorized
          schema:
            type: string
        '404':
          description: TaskResponse Not Found
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
    delete:
      tags:
      - tasks
      summary: Delete a task
      description: Delete a task
      operationId: deleteTask
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: Token
        required: true
        type: string
      - name: id
        in: query
        description: TaskResponse id
        required: true
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: string
        '400':
          description: Bad Body Request
          schema:
            type: string
        '401':
          description: Unauthorized
          schema:
            type: string
        '404':
          description: TaskResponse Not Found
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
  /task/{task_id}/done:
    patch:
      tags:
      - tasks
      summary: Mark a task as done
      description: Mark a task as done
      operationId: markTaskAsDone
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: Token
        required: true
        type: string
      - name: id
        in: query
        description: TaskResponse id
        required: true
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: string
        '400':
          description: Bad Body Request
          schema:
            type: string
        '401':
          description: Unauthorized
          schema:
            type: string
        '404':
          description: TaskResponse Not Found
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
  /task/{task_id}/undone:
    patch:
      tags:
      - tasks
      summary: Mark a task as undone
      description: Mark a task as undone
      operationId: markTaskAsUndone
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: Token
        required: true
        type: string
      - name: id
        in: query
        description: TaskResponse id
        required: true
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: string
        '400':
          description: Bad Body Request
          schema:
            type: string
        '401':
          description: Unauthorized
          schema:
            type: string
        '404':
          description: TaskResponse Not Found
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string  
definitions:
  RegisterResponse:
    type: object
    properties:
      name:
        type: string
      email:
        type: string
      password:
        type: string
  LoginBody:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
  TaskResponse:
    type: object
    properties:
      id:
        type: string
        format: uuid
      list:
        type: string
      title:
        type: string
      description:
        type: string
      status:
        enum:
        - done
        - undone
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time 
  TaskBody:
    type: object
    properties:
      list:
        type: string
      title:
        type: string
      description:
        type: string
  LoginResult:
    type: object
    properties:
      token:
        type: string
        format: uuid
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io